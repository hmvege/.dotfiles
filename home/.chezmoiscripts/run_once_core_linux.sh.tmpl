{{ if (eq .chezmoi.os "linux") -}}
{{ if (eq .chezmoi.osRelease.id "ubuntu") -}}
#!/bin/bash

# Set to catch non-zero exit status errors, variable errors or pipeline 
# failures.
set -euo pipefail

sudo apt-get update

packages=(
    bat
    fasd
    git
    htop
    jq
    libffi-dev
    mc
    python3
    python3-pip
    tmux
    unzip
    vim
    wget
    zsh
)

sudo apt install -y ${packages[@]}
echo "Packages installed."

## Bat
mkdir -p ~/.local/bin
ln -s /usr/bin/batcat ~/.local/bin/bat

## Oh-my-zsh
if [ -d "${HOME}/.oh-my-zsh" ]; then
    echo "Oh My Zsh already installed at: ${HOME}/.oh-my-zsh"
else
    # sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended --keep-zshrc
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    echo "Oh My Zsh is installed."
fi

# Oh-my-zsh plugins
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
echo "zsh-syntax-highlighting downloaded"

git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
echo "zsh-autosuggestions downloaded"

## tmux pllsugins
if ! -d "${HOME}/.tmux/plugins/tpm"
then
    git clone https://github.com/tmux-plugins/tpm ${HOME}/.tmux/plugins/tpm
    echo "tmux plugin manager installed."
else
    echo "tmux plugin manager already installed."
fi

## vim plugin manager
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
echo "vim plugin manager installed"

## install fzf
if ! type -p fzf >/dev/null 2>&1
then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install --all
    echo "Installed fzf"
fi

## pipx
if ! type -p pipx >/dev/null 2>&1
then
    sudo /usr/bin/python3 -m pip install pipx
    echo "Installed pipx"
    /usr/local/bin/pipx ensurepath
    for pkg in "flake8 mypy black pip-tools pre-commit"
    do
        /usr/local/bin/pipx install $pkg
    done
fi

## pyenv + pyenv-virtualenv
## Snippet inspired and taken from
# https://github.com/tordks/.dotfiles/blob/master/install_pyenv.sh
# See https://github.com/pyenv/pyenv-virtualenv/issues/233
if ! type -p pyenv >/dev/null 2>&1
then
    curl https://pyenv.run | bash
    # See https://github.com/pyenv/pyenv/wiki#suggested-build-environment
    # in case the build fails.
    sudo apt-get install libssl-dev
    $HOME/.pyenv/bin/pyenv install 3.9.9
    $HOME/.pyenv/bin/pyenv global 3.9.9
    echo "Installed pyenv and pyenv-virtualenv"
fi

# ## Brew
# if ! type -p brew >/dev/null 2>&1
# then
#     /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
#     echo "Installed Brew"
# fi

## lsd
if ! type -p lsd >/dev/null 2>&1
then
    sudo snap install lsd
    # /home/linuxbrew/.linuxbrew/bin/brew install lsd
    echo "Installed lsd"
fi

{{ end -}}
{{ if (not (eq .chezmoi.osRelease.id "ubuntu")) -}}
echo "Linux flavour $OSTYPE not recognized."
{{ end -}}
{{ end -}}
